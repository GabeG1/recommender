{"ast":null,"code":"const API_KEY = '5a8ae4f1';\nconst URL = \"http://omdbapi.com/?type=movie&apikey=\";\nconst CORS = \"https://cors-anywhere.herokuapp.com/\";\nconst Movies = {\n  searchMovies: async function (query) {\n    const response = await fetch(`${URL}${API_KEY}&s=${query}`, {\n      headers: {}\n    });\n    const jsonResponse = await response.json();\n    console.log(jsonResponse); //console.log(jsonResponse.Search[0].Title);\n\n    if (!jsonResponse.Search) {\n      console.log('here');\n      return [];\n    }\n\n    return jsonResponse.Search.map(movie => {\n      return {\n        id: movie.imdbID,\n        title: movie.Title,\n        image: movie.Poster,\n        year: movie.Year\n      };\n    });\n  }\n};\nexport default Movies;","map":{"version":3,"sources":["C:/Users/burlea/Personal Projects/recommender/FrontEnd/src/Util/MovieSearch.js"],"names":["API_KEY","URL","CORS","Movies","searchMovies","query","response","fetch","headers","jsonResponse","json","console","log","Search","map","movie","id","imdbID","title","Title","image","Poster","year","Year"],"mappings":"AAAA,MAAMA,OAAO,GAAG,UAAhB;AACA,MAAMC,GAAG,GAAG,wCAAZ;AACA,MAAMC,IAAI,GAAG,sCAAb;AACA,MAAMC,MAAM,GAAG;AACXC,EAAAA,YAAY,EAAE,gBAAgBC,KAAhB,EAAuB;AACrC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,GAAI,GAAED,OAAQ,MAAKK,KAAM,EAA7B,EAAgC;AACxDG,MAAAA,OAAO,EAAE;AAD+C,KAAhC,CAA5B;AAMA,UAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ,EARqC,CASrC;;AACA,QAAG,CAACA,YAAY,CAACI,MAAjB,EAAyB;AACrBF,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,aAAO,EAAP;AACH;;AACD,WAAOH,YAAY,CAACI,MAAb,CAAoBC,GAApB,CAAwBC,KAAK,IAAI;AACxC,aAAO;AAEHC,QAAAA,EAAE,EAAED,KAAK,CAACE,MAFP;AAGHC,QAAAA,KAAK,EAAEH,KAAK,CAACI,KAHV;AAIHC,QAAAA,KAAK,EAAEL,KAAK,CAACM,MAJV;AAKHC,QAAAA,IAAI,EAAEP,KAAK,CAACQ;AALT,OAAP;AAQH,KATU,CAAP;AAUH;AAzBc,CAAf;AA4BA,eAAepB,MAAf","sourcesContent":["const API_KEY = '5a8ae4f1';\r\nconst URL = \"http://omdbapi.com/?type=movie&apikey=\";\r\nconst CORS = \"https://cors-anywhere.herokuapp.com/\";\r\nconst Movies = {\r\n    searchMovies: async function (query) {\r\n    const response = await fetch(`${URL}${API_KEY}&s=${query}`, {\r\n        headers: {\r\n        \r\n        }\r\n    } \r\n    );\r\n    const jsonResponse = await response.json();\r\n    console.log(jsonResponse);\r\n    //console.log(jsonResponse.Search[0].Title);\r\n    if(!jsonResponse.Search) {\r\n        console.log('here');\r\n        return [];\r\n    }\r\n    return jsonResponse.Search.map(movie => {\r\n    return { \r\n        \r\n        id: movie.imdbID,\r\n        title: movie.Title,\r\n        image: movie.Poster,\r\n        year: movie.Year, \r\n    }\r\n\r\n});\r\n}\r\n}\r\n\r\nexport default Movies;"]},"metadata":{},"sourceType":"module"}